
import { ComboBox, CheckBox, Button, StandardTableView, HorizontalBox, LineEdit, ScrollView } from "std-widgets.slint";
export component AppWindow inherits Window {
    // `in` means that it is data that is taken into the widget but cannot be modified by the widget
    
    in property <[[StandardListViewItem]]> table-data; // 2d vector of values excluding the header row
    in property <[TableColumn]> header-data; // 1d vector of values that is just the header row/column titles

    in-out property <string> inbox-name-var;
    in-out property <string> inbox-value-var;
    in-out property <string> inbox-type-var;
    in-out property <string> inbox-phone-var;
    in-out property <string> inbox-address-var;
    in-out property <string> inbox-scholarship-var;

    in-out property <bool> is-name-hidden;
    in-out property <bool> is-value-hidden;
    in-out property <bool> is-type-hidden;
    in-out property <bool> is-phone-number-hidden;
    in-out property <bool> is-address-hidden;
    in-out property <bool> is-scholarship-hidden;



    callback hide_column(string);
    callback show_column(string);
    callback sort(int);
    callback open_popup();
    callback close_popup();
    callback update_search();
    callback update_shown_headers();
    callback update_table_display();
    callback add_row();
    callback delete_row();
    callback save_to_csv();
    callback load_from_csv();
    

    width: 1200px;
    height: 1000px;

    popup := PopupWindow {
        close-on-click: false;
        x: root.width*(0.28);
        y: root.height*(0.23);
        width: root.width*(1-0.28);
        height: root.height*(1-0.23);

        popup_background := Rectangle {
            background: lightgray;
            x: parent.x;
            y: parent.y;
            width: parent.width;
            height: parent.height;
            VerticalLayout {
                x: parent.x;
                y: parent.y;
                width: parent.width;
                height: parent.height;

                header_text := Text {
                    width: self.preferred-width;
                    height: self.preferred-height;
                    horizontal-alignment: center;
                    vertical-alignment: center;
                    font-size: 24px;
                    wrap: word-wrap;
                    //font-weight: 4; // 100-900 (400 default)
                    text: "Help Menu";
                }
                help_text := Text {
                    width: parent.width;
                    height: self.preferred-height;
                    horizontal-alignment: left;
                    vertical-alignment: center;
                    font-size: 14px;
                    //font-weight: 2; // 100-900 (400 default)
                    wrap: word-wrap;
                    text: "Add / Delete \nTo add or delete a value from a row, use the entry boxes in the middle of the top bar\nwhen you're done selecting or writing the entry, press the delete record or add record buttons\n\nSearch\nTo search for a record just type a value in the box correlating to the Column you'd like to search.\n\nFilter\nTo filter results, use the checkboxes on the left of your screen to select which \ncolumn you'd like to hide\n\nSort\nTo sort the data, click on the header box of the column you'd like to sort by\n\nSave / Load\nto save your changes to permanent storage, press the save to CSV button on the lefthand side of your screen, to reset data to the last save point press the load from CSV button";               
                }
                
                exit_button := Button {
                    x: parent.width/2 - self.preferred-width/2; // centered
                    width: self.preferred-width;
                    height: self.preferred-height;
                    text: "close";
                    clicked => { popup.close(); }
                }
                
                
            }
        }
    }

    main_layout := HorizontalLayout { // creates an unnamed `HorizonalLayout`
        // Image {
        //     source: @image-url("https://picsum.photos/id/1/200/200");
        // }
        left_side := VerticalLayout {
            min-width: 100px;
            horizontal-stretch: 0.3;
            
            menu_option := Rectangle { // creates a new `Rectangle` named "menu_option"
            // use `Button` to create a dropdown that has a selection, each of which when clicked creates a new
                background: lightgray;
                min-height: 50px;
                max-height: 100px;
                vertical-stretch: 0.25;

                hamburger := Rectangle { // TODO: ADD SAVE BUTTON
                    background: darkgoldenrod;
                    x: parent.height*(0.175);
                    y: self.x;
                    width: parent.height*(0.65);
                    height: self.width;
                    TouchArea {
                        clicked => { 
                            if (self.pressed){
                                popup.show();
                            } else {
                                popup.close();
                            }
                        }
                    }

                }
                
            }

            filter_options := Rectangle { 
                background: gray;

                load_csv := Button {
                    x: parent.width*(1/4);
                    y: parent.height*(1/7);
                    text: "load from CSV";
                    clicked => { load_from_csv(); }
                }

                save_csv := Button {
                    x: parent.width*(3/5);
                    y: parent.height*(1/7);
                    text: "save to CSV";
                    clicked => { save_to_csv(); }
                }
                

                Text {
                    x: parent.width*(2/5);
                    y: parent.height*(1/12) + parent.height*(1/5);
                    text: "Hide Columns";
                }

                is_name_hidden := CheckBox {
                    x: parent.width*(1/4);
                    y: parent.height*(1/8) + parent.height*(1/5);
                    width: 50px;
                    height: 50px;
                    text: "Name";
                    checked: root.is-name-hidden;
                    toggled => { 
                        if (self.checked) {hide_column(self.text)} else {show_column(self.text)};
                        root.is-name-hidden = self.checked;
                        update_shown_headers();
                        update_table_display();
                    }
                }
                is_value_hidden := CheckBox {
                    x: parent.width*(1/4);
                    y: parent.height*(2/8) + parent.height*(1/5);
                    width: 50px;
                    height: 50px;
                    text: "Address";
                    checked: root.is-value-hidden;
                    toggled => { 
                        if (self.checked) {hide_column(self.text)} else {show_column(self.text)};
                        root.is-value-hidden = self.checked;
                        update_shown_headers();
                        update_table_display();
                    }
                }
                is_type_hidden := CheckBox {
                    x: parent.width*(1/4);
                    y: parent.height*(3/8) + parent.height*(1/5);
                    width: 50px;
                    height: 50px;
                    text: "Phone Number";
                    checked: root.is-type-hidden;
                    toggled => { 
                        if (self.checked) {hide_column(self.text)} else {show_column(self.text)};
                        root.is-type-hidden = self.checked;
                        update_shown_headers();
                        update_table_display();
                    }
                }
                is_phone_number_hidden := CheckBox {
                    x: parent.width*(3/5);
                    y: parent.height*(1/8) + parent.height*(1/5);
                    width: 50px;
                    height: 50px;
                    text: "Pathway";
                    checked: root.is-phone-number-hidden;
                    toggled => { 
                        if (self.checked) {hide_column(self.text)} else {show_column(self.text)};
                        root.is-phone-number-hidden = self.checked;
                        update_shown_headers();
                        update_table_display();
                    }
                }
                is_address_hidden := CheckBox {
                    x: parent.width*(3/5);
                    y: parent.height*(2/8) + parent.height*(1/5);
                    width: 50px;
                    height: 50px;
                    text: "Email";
                    checked: root.is-address-hidden;
                    toggled => { 
                        if (self.checked) {hide_column(self.text)} else {show_column(self.text)};
                        root.is-address-hidden = self.checked;
                        update_shown_headers();
                        update_table_display();
                    }
                }
                is_scholarship_hidden := CheckBox {
                    x: parent.width*(3/5);
                    y: parent.height*(3/8) + parent.height*(1/5);
                    width: 50px;
                    height: 50px;
                    text: "Organization";
                    checked: root.is-scholarship-hidden;
                    toggled => { 
                        if (self.checked) {hide_column(self.text)} else {show_column(self.text)};
                        root.is-scholarship-hidden = self.checked;
                        update_shown_headers();
                        update_table_display();
                    }
                }
            }
        }

        right_side := VerticalLayout { 

            add_new_record := Rectangle { // use `LineEdit` for text input, `CheckBox` for scholarship boolean, maybe others
                background: gray;
                min-height: menu-option.min-height; // sets the dimensions to be the same as those of "menu_option"
                vertical-stretch: menu-option.vertical-stretch;

                clear_input_boxes := Button {
                    x: parent.x;
                    y: parent.y + parent.height/2;
                    text: "clear inputs";
                    clicked => {
                        inbox-name.text = "";
                        inbox-name-var = inbox-name.text;

                        inbox-value.text = "";
                        inbox-value-var = inbox-value.text;

                        inbox-type.text = "";
                        inbox-type-var = inbox-type.text;

                        inbox-phone-number.text = "";
                        inbox-phone-var = inbox-phone-number.text; 

                        inbox-address.text = "";
                        inbox-address-var = inbox-address.text;

                        inbox-scholarship.text = "";
                        inbox-scholarship-var = inbox-scholarship.text;

                        update_search();
                    }
                }

                add_record := Button {
                    x: parent.x + parent.width*(1/3);
                    y: parent.y + parent.height/2;
                    text: "add record";
                    clicked => { add_row(); }
                }

                // TODO: add button to update/edit a record

                delete_record := Button {
                    x: parent.x + parent.width*(2/3);
                    y: parent.y + parent.height/2;
                    text: "delete record";
                    clicked => { delete_row(); }
                }
                
                HorizontalBox {
                    x: parent.x;
                    y: parent.y;
                    width: parent.width;
                    height: parent.height*(1/6);
                    inbox-name := LineEdit {
                        y: parent.y;
                        height: parent.height;
                        font-size: 14px;
                        placeholder-text: "Name";
                        text: inbox-name-var;
                        edited => { 
                            inbox-name-var = self.text; 
                            update_search(); 
                        }
                    }
                    inbox-value := LineEdit {
                        y: parent.y;
                        height: parent.height;
                        font-size: 14px;
                        placeholder-text: "Pathway";
                        text: inbox-value-var;
                        edited => { 
                            inbox-value-var = self.text;
                            update_search(); 
                        }
                    }
                    inbox-type := LineEdit {
                        y: parent.y;
                        height: parent.height;
                        font-size: 14px;
                        placeholder-text: "Address";
                        text: inbox-type-var;
                        edited => { 
                            inbox-type-var = self.text;
                            update_search(); 
                        }
                    }
                }
                HorizontalBox {
                    x: parent.x;
                    y: parent.height*(1/5);
                    width: parent.width;
                    height: parent.height*(1/6);
                    inbox-phone-number := LineEdit {
                        y: parent.y;
                        height: parent.height;
                        font-size: 14px;
                        placeholder-text: "Email";
                        text: inbox-phone-var;
                        edited => { 
                            inbox-phone-var = self.text;
                            update_search();
                        }
                    }
                    inbox-address := LineEdit {
                        y: parent.y;
                        height: parent.height;
                        font-size: 14px;
                        placeholder-text: "Phone Number";
                        text: inbox-address-var;
                        edited => { 
                            inbox-address-var = self.text;
                            update_search(); 
                        }
                    }
                    inbox-scholarship := LineEdit {
                        y: parent.y;
                        height: parent.height;
                        font-size: 14px;
                        placeholder-text: "Organization";
                        text: inbox-scholarship-var;
                        edited => { 
                            inbox-scholarship-var = self.text;
                            update_search(); 
                        }
                    }
                }

                 
                }


            

            table_display := Rectangle { // add a scrollview to contain the tableview
                background: lightgray;
                
                ScrollView {
                    width: 100%;
                    height: 100%;
                    
                    csv_display := StandardTableView {
                        x: parent.x;
                        y: parent.y;
                        width: parent.width;
                        height: parent.height;
                        columns: header-data;
                        rows: table-data;
                        
                        sort-ascending => {
                            // sort ascending by column
                            sort(self.current-sort-column);
                        }
                        sort-descending => {
                            // sort decending by column
                            sort(self.current-sort-column);
                        }
                        
                    }
                }
            }
        }
    }
}





